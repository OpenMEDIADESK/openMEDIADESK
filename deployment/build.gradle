import java.text.SimpleDateFormat
import java.util.Date

plugins {
    id 'com.palantir.git-version' version '0.8.0'
}

apply plugin: 'java'
apply plugin: 'war'

tasks.compileJava.dependsOn("precompile")

war {



        def details = versionDetails()
        details.lastTag
        details.commitDistance
        details.gitHash
        details.branchName // is null if the repository in detached HEAD mode
        details.isCleanTag

        println 'LastTag:       ' + details.lastTag
        println 'CommitDistance ' + details.commitDistance
        println 'GitHash        ' + details.gitHash
        println 'BranchName     ' + details.branchName
        println 'isCleanTag     ' + details.isCleanTag

        baseName = 'mediaDESK'

        if (details.commitDistance == 0) {
            //Version Build
            println 'Configuring a RELEASE'
            version = details.lastTag
        } else {
            //Nightly Build
            println 'Configuring a Nightly Build'
            version = '2018n' + getCurrentTimestamp()
        }

        webXml = file('web-saas.xml')

        manifest {
            attributes("Implementation-Title": "mediaDESK",
                    "Implementation-Version": version)
        }

    doFirst {

        println 'Building .war for Version ' + version

    }
}

task clear << {

    delete 'src'
    delete 'build'

}


task precompile {

    doFirst {

        delete 'src'
        delete 'build'

        println 'Copy Java Sources to src directory'

        copy {
            from "../src/main/java"
            into "src/main/java"
        }

        println 'Copy Web Resources to src directory'

        copy {
            from "../resources"
            exclude "/WEB-INF/classes"
            exclude "/WEB-INF/messages"
            into "src/main/webapp"
        }

        println 'Copy SQLMAP Resources to src directory'

        copy {
            from "../resources/WEB-INF/classes/sqlmap"
            into "src/main/webapp/WEB-INF/classes/sqlmap"
        }

        println 'Copy Resource Bundles to src directory'

        copy {
            from "messages.img"
            into "src/main/webapp/WEB-INF/messages/image/"
        }

        copy {
            from "messages.dms"
            into "src/main/webapp/WEB-INF/messages/media/"
        }

        println 'Copy other Resources to src directory'

        copy {
            from "lesscssjs"
            into "src/main/webapp/WEB-INF/classes/META-INF/"
        }

        copy {
            from "../resources/WEB-INF/classes/applicationContext.xml"
            into "src/main/webapp/WEB-INF/classes/"
        }

        copy {
            from "../resources/WEB-INF/classes/mime-types.properties"
            into "src/main/webapp/WEB-INF/classes/"
        }
        copy {
            from "log4j.properties"
            into "src/main/webapp/WEB-INF/classes/"
        }

        delete 'src/main/webapp/WEB-INF/update.sql', 'src/main/webapp/WEB-INF/create.sql'

        copy {
            from "update.sql"
            into "src/main/webapp/WEB-INF/"
        }

        copy {
            from "create.sql"
            into "src/main/webapp/WEB-INF/"
        }

        copy {
            from "reset.sql"
            into "src/main/webapp/WEB-INF/"
        }

        delete 'src/main/webapp/WEB-INF/lib', 'src/main/webapp/WEB-INF/mediaDESK.conf', 'src/main/webapp/WEB-INF/web.xml'

    }

}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libapi/classpath')
    providedCompile files('libapi/servlet-api.jar','libapi/el-api.jar', 'libapi/jsp-api.jar')
}


def getCurrentTimestamp ()
{
    Date today = new Date ()
    SimpleDateFormat df = new SimpleDateFormat ("yyyyMMdd")
    return df.format (today)
}


